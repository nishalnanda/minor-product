version: '3.7'

services:
  product-service:
    container_name: "product-service"
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - mongo
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
    healthcheck:
      test: curl --fail http://product-service:8080/actuator || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - product

  mongo:
    container_name: mongo-product
    image: mongo:4.4.14-rc0-focal
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - product

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    expose:
      - "9090"
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - product


  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    expose:
      - "3000"
    depends_on:
      - prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    user: "$UID:$GID"
    networks:
      - product
networks:
  product:
    driver: bridge

volumes:
  grafana: {}
